{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Dineshkumar128/ISYS2001-S1-2025/blob/main/Assignment%20work\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "72e78a05",
      "metadata": {
        "id": "72e78a05"
      },
      "source": [
        "# 🌦️ WeatherWise – Starter Notebook\n",
        "\n",
        "Welcome to your **WeatherWise** project notebook! This scaffold is designed to help you build your weather advisor app using Python, visualisations, and AI-enhanced development.\n",
        "\n",
        "---\n",
        "\n",
        "📄 **Full Assignment Specification**  \n",
        "See [`ASSIGNMENT.md`](ASSIGNMENT.md) or check the LMS for full details.\n",
        "\n",
        "📝 **Quick Refresher**  \n",
        "A one-page summary is available in [`resources/assignment-summary.md`](resources/assignment-summary.md).\n",
        "\n",
        "---\n",
        "\n",
        "🧠 **This Notebook Structure is Optional**  \n",
        "You’re encouraged to reorganise, rename sections, or remove scaffold cells if you prefer — as long as your final version meets the requirements.\n",
        "\n",
        "✅ You may delete this note before submission.\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "fa8c7f6c",
      "metadata": {
        "id": "fa8c7f6c"
      },
      "source": [
        "## 🧰 Setup and Imports\n",
        "\n",
        "This section imports commonly used packages and installs any additional tools used in the project.\n",
        "\n",
        "- You may not need all of these unless you're using specific features (e.g. visualisations, advanced prompting).\n",
        "- The notebook assumes the following packages are **pre-installed** in the provided environment or installable via pip:\n",
        "  - `requests`, `matplotlib`, `pyinputplus`\n",
        "  - `fetch-my-weather` (for accessing weather data easily)\n",
        "  - `hands-on-ai` (for AI logging, comparisons, or prompting tools)\n",
        "\n",
        "If you're running this notebook in **Google Colab**, uncomment the following lines to install the required packages.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 36,
      "id": "70c3f3f1",
      "metadata": {
        "id": "70c3f3f1",
        "outputId": "abd9892d-0ade-4b96-c257-d91c149eba1e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: fetch-my-weather in /usr/local/lib/python3.11/dist-packages (0.4.0)\n",
            "Requirement already satisfied: requests>=2.25.0 in /usr/local/lib/python3.11/dist-packages (from fetch-my-weather) (2.32.3)\n",
            "Requirement already satisfied: pydantic>=1.8.0 in /usr/local/lib/python3.11/dist-packages (from fetch-my-weather) (2.11.4)\n",
            "Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.11/dist-packages (from pydantic>=1.8.0->fetch-my-weather) (0.7.0)\n",
            "Requirement already satisfied: pydantic-core==2.33.2 in /usr/local/lib/python3.11/dist-packages (from pydantic>=1.8.0->fetch-my-weather) (2.33.2)\n",
            "Requirement already satisfied: typing-extensions>=4.12.2 in /usr/local/lib/python3.11/dist-packages (from pydantic>=1.8.0->fetch-my-weather) (4.13.2)\n",
            "Requirement already satisfied: typing-inspection>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from pydantic>=1.8.0->fetch-my-weather) (0.4.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests>=2.25.0->fetch-my-weather) (3.4.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests>=2.25.0->fetch-my-weather) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests>=2.25.0->fetch-my-weather) (2.4.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests>=2.25.0->fetch-my-weather) (2025.4.26)\n",
            "Requirement already satisfied: hands-on-ai in /usr/local/lib/python3.11/dist-packages (0.1.9)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from hands-on-ai) (2.32.3)\n",
            "Requirement already satisfied: typer in /usr/local/lib/python3.11/dist-packages (from hands-on-ai) (0.15.3)\n",
            "Requirement already satisfied: python-fasthtml in /usr/local/lib/python3.11/dist-packages (from hands-on-ai) (0.12.16)\n",
            "Requirement already satisfied: python-docx in /usr/local/lib/python3.11/dist-packages (from hands-on-ai) (1.1.2)\n",
            "Requirement already satisfied: pymupdf in /usr/local/lib/python3.11/dist-packages (from hands-on-ai) (1.25.5)\n",
            "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.11/dist-packages (from hands-on-ai) (1.6.1)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from hands-on-ai) (2.0.2)\n",
            "Requirement already satisfied: lxml>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from python-docx->hands-on-ai) (5.4.0)\n",
            "Requirement already satisfied: typing-extensions>=4.9.0 in /usr/local/lib/python3.11/dist-packages (from python-docx->hands-on-ai) (4.13.2)\n",
            "Requirement already satisfied: fastcore>=1.8.1 in /usr/local/lib/python3.11/dist-packages (from python-fasthtml->hands-on-ai) (1.8.2)\n",
            "Requirement already satisfied: python-dateutil in /usr/local/lib/python3.11/dist-packages (from python-fasthtml->hands-on-ai) (2.9.0.post0)\n",
            "Requirement already satisfied: starlette>0.33 in /usr/local/lib/python3.11/dist-packages (from python-fasthtml->hands-on-ai) (0.46.2)\n",
            "Requirement already satisfied: oauthlib in /usr/local/lib/python3.11/dist-packages (from python-fasthtml->hands-on-ai) (3.2.2)\n",
            "Requirement already satisfied: itsdangerous in /usr/local/lib/python3.11/dist-packages (from python-fasthtml->hands-on-ai) (2.2.0)\n",
            "Requirement already satisfied: uvicorn>=0.30 in /usr/local/lib/python3.11/dist-packages (from uvicorn[standard]>=0.30->python-fasthtml->hands-on-ai) (0.34.2)\n",
            "Requirement already satisfied: httpx in /usr/local/lib/python3.11/dist-packages (from python-fasthtml->hands-on-ai) (0.28.1)\n",
            "Requirement already satisfied: fastlite>=0.1.1 in /usr/local/lib/python3.11/dist-packages (from python-fasthtml->hands-on-ai) (0.1.3)\n",
            "Requirement already satisfied: python-multipart in /usr/local/lib/python3.11/dist-packages (from python-fasthtml->hands-on-ai) (0.0.20)\n",
            "Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.11/dist-packages (from python-fasthtml->hands-on-ai) (4.13.4)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->hands-on-ai) (3.4.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->hands-on-ai) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->hands-on-ai) (2.4.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->hands-on-ai) (2025.4.26)\n",
            "Requirement already satisfied: scipy>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn->hands-on-ai) (1.15.3)\n",
            "Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn->hands-on-ai) (1.5.0)\n",
            "Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn->hands-on-ai) (3.6.0)\n",
            "Requirement already satisfied: click>=8.0.0 in /usr/local/lib/python3.11/dist-packages (from typer->hands-on-ai) (8.1.8)\n",
            "Requirement already satisfied: shellingham>=1.3.0 in /usr/local/lib/python3.11/dist-packages (from typer->hands-on-ai) (1.5.4)\n",
            "Requirement already satisfied: rich>=10.11.0 in /usr/local/lib/python3.11/dist-packages (from typer->hands-on-ai) (13.9.4)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from fastcore>=1.8.1->python-fasthtml->hands-on-ai) (24.2)\n",
            "Requirement already satisfied: apswutils>=0.0.2 in /usr/local/lib/python3.11/dist-packages (from fastlite>=0.1.1->python-fasthtml->hands-on-ai) (0.0.2)\n",
            "Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.11/dist-packages (from rich>=10.11.0->typer->hands-on-ai) (3.0.0)\n",
            "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.11/dist-packages (from rich>=10.11.0->typer->hands-on-ai) (2.19.1)\n",
            "Requirement already satisfied: anyio<5,>=3.6.2 in /usr/local/lib/python3.11/dist-packages (from starlette>0.33->python-fasthtml->hands-on-ai) (4.9.0)\n",
            "Requirement already satisfied: h11>=0.8 in /usr/local/lib/python3.11/dist-packages (from uvicorn>=0.30->uvicorn[standard]>=0.30->python-fasthtml->hands-on-ai) (0.16.0)\n",
            "Requirement already satisfied: httptools>=0.6.3 in /usr/local/lib/python3.11/dist-packages (from uvicorn[standard]>=0.30->python-fasthtml->hands-on-ai) (0.6.4)\n",
            "Requirement already satisfied: python-dotenv>=0.13 in /usr/local/lib/python3.11/dist-packages (from uvicorn[standard]>=0.30->python-fasthtml->hands-on-ai) (1.1.0)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.11/dist-packages (from uvicorn[standard]>=0.30->python-fasthtml->hands-on-ai) (6.0.2)\n",
            "Requirement already satisfied: uvloop!=0.15.0,!=0.15.1,>=0.14.0 in /usr/local/lib/python3.11/dist-packages (from uvicorn[standard]>=0.30->python-fasthtml->hands-on-ai) (0.21.0)\n",
            "Requirement already satisfied: watchfiles>=0.13 in /usr/local/lib/python3.11/dist-packages (from uvicorn[standard]>=0.30->python-fasthtml->hands-on-ai) (1.0.5)\n",
            "Requirement already satisfied: websockets>=10.4 in /usr/local/lib/python3.11/dist-packages (from uvicorn[standard]>=0.30->python-fasthtml->hands-on-ai) (15.0.1)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4->python-fasthtml->hands-on-ai) (2.7)\n",
            "Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.11/dist-packages (from httpx->python-fasthtml->hands-on-ai) (1.0.9)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil->python-fasthtml->hands-on-ai) (1.17.0)\n",
            "Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.11/dist-packages (from anyio<5,>=3.6.2->starlette>0.33->python-fasthtml->hands-on-ai) (1.3.1)\n",
            "Requirement already satisfied: apsw in /usr/local/lib/python3.11/dist-packages (from apswutils>=0.0.2->fastlite>=0.1.1->python-fasthtml->hands-on-ai) (3.49.2.0)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.11/dist-packages (from markdown-it-py>=2.2.0->rich>=10.11.0->typer->hands-on-ai) (0.1.2)\n"
          ]
        }
      ],
      "source": [
        "# 🧪 Optional packages — uncomment if needed in Colab or JupyterHub\n",
        "!pip install fetch-my-weather\n",
        "!pip install hands-on-ai\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from typing import Optional, Union, Literal, Dict, Any\n",
        "\n",
        "def fetch_my_weather(\n",
        "    location: str = \"\",\n",
        "    units: str = \"\",\n",
        "    view_options: str = \"\",\n",
        "    lang: Optional[str] = None,\n",
        "    is_png: bool = False,\n",
        "    png_options: str = \"\",\n",
        "    is_moon: bool = False,\n",
        "    moon_date: Optional[str] = None,\n",
        "    moon_location_hint: Optional[str] = None,\n",
        "    format: Literal[\"text\", \"json\", \"raw_json\", \"png\"] = \"json\",\n",
        "    use_mock: Optional[bool] = None,\n",
        "    with_metadata: bool = False,\n",
        ") -> Union[str, bytes, Dict[str, Any]]:\n",
        "    # Your function logic here\n",
        "    pass\n"
      ],
      "metadata": {
        "id": "B2JKlJfrGgIb"
      },
      "id": "B2JKlJfrGgIb",
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "id": "59ae7543",
      "metadata": {
        "id": "59ae7543"
      },
      "source": [
        "## 📦 Setup and Configuration\n",
        "Import required packages and setup environment."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 41,
      "id": "f1dd051e",
      "metadata": {
        "id": "f1dd051e",
        "outputId": "4c5f83a4-11d3-42be-96af-4fc08519ff44",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "None\n"
          ]
        }
      ],
      "source": [
        "result = fetch_my_weather(\n",
        "    location=\"Perth\",\n",
        "    units=\"metric\",\n",
        "    view_options=\"full\",\n",
        "    lang=\"en\",\n",
        "    is_png=False,\n",
        "    png_options=\"\",\n",
        "    is_moon=False,\n",
        "    format=\"json\",\n",
        "    use_mock=False,\n",
        "    with_metadata=True,\n",
        ")\n",
        "print(result)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "f736ade3",
      "metadata": {
        "id": "f736ade3"
      },
      "source": [
        "## 🌤️ Weather Data Functions"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 51,
      "id": "7a2c7cd0",
      "metadata": {
        "id": "7a2c7cd0",
        "outputId": "d9de2155-3bf7-4dc9-c1ea-19dc169a6880",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Default JSON format for Perth:\n",
            "current_condition=[CurrentCondition(FeelsLikeC='20', FeelsLikeF='68', cloudcover='0', humidity='60', localObsDateTime='2025-05-15 06:48 PM', observation_time='10:48 AM', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', temp_C='20', temp_F='68', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='S', winddirDegree='186', windspeedKmph='20', windspeedMiles='12')] nearest_area=[NearestArea(areaName=[AreaName(value='Maylands')], country=[Country(value='Australia')], latitude='-31.933', longitude='115.883', population='10447', region=[Region(value='Western Australia')], weatherUrl=[WeatherIconUrl(value='')])] request=[Request(query='Lat -31.95 and Lon 115.86', type='LatLon')] weather=[DailyForecast(astronomy=[Astronomy(moon_illumination='95', moon_phase='Waning Gibbous', moonrise='07:04 PM', moonset='09:19 AM', sunrise='06:58 AM', sunset='05:28 PM')], avgtempC='19', avgtempF='67', date='2025-05-15', hourly=[HourlyForecast(DewPointC='6', DewPointF='43', FeelsLikeC='18', FeelsLikeF='65', HeatIndexC='18', HeatIndexF='65', WindChillC='18', WindChillF='65', WindGustKmph='32', WindGustMiles='20', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='81', chanceofsnow='0', chanceofsunshine='93', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='45', precipInches='0.0', precipMM='0.0', pressure='1026', pressureInches='30', tempC='18', tempF='65', time='0', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='E', winddirDegree='87', windspeedKmph='19', windspeedMiles='12'), HourlyForecast(DewPointC='6', DewPointF='44', FeelsLikeC='17', FeelsLikeF='63', HeatIndexC='17', HeatIndexF='63', WindChillC='17', WindChillF='63', WindGustKmph='29', WindGustMiles='18', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='89', chanceofsnow='0', chanceofsunshine='87', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='49', precipInches='0.0', precipMM='0.0', pressure='1026', pressureInches='30', tempC='17', tempF='63', time='300', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='72', windspeedKmph='17', windspeedMiles='11'), HourlyForecast(DewPointC='8', DewPointF='46', FeelsLikeC='16', FeelsLikeF='61', HeatIndexC='16', HeatIndexF='61', WindChillC='16', WindChillF='61', WindGustKmph='22', WindGustMiles='14', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='93', chanceofsnow='0', chanceofsunshine='87', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='59', precipInches='0.0', precipMM='0.0', pressure='1025', pressureInches='30', tempC='16', tempF='61', time='600', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='67', windspeedKmph='13', windspeedMiles='8'), HourlyForecast(DewPointC='10', DewPointF='49', FeelsLikeC='18', FeelsLikeF='65', HeatIndexC='18', HeatIndexF='65', WindChillC='18', WindChillF='65', WindGustKmph='14', WindGustMiles='9', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='86', chanceofsnow='0', chanceofsunshine='86', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='57', precipInches='0.0', precipMM='0.0', pressure='1026', pressureInches='30', tempC='18', tempF='65', time='900', uvIndex='1', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='58', windspeedKmph='11', windspeedMiles='7'), HourlyForecast(DewPointC='9', DewPointF='48', FeelsLikeC='25', FeelsLikeF='76', HeatIndexC='25', HeatIndexF='76', WindChillC='24', WindChillF='75', WindGustKmph='5', WindGustMiles='3', chanceoffog='0', chanceoffrost='0', chanceofhightemp='10', chanceofovercast='0', chanceofrain='0', chanceofremdry='83', chanceofsnow='0', chanceofsunshine='90', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='39', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='24', tempF='75', time='1200', uvIndex='4', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='N', winddirDegree='358', windspeedKmph='4', windspeedMiles='2'), HourlyForecast(DewPointC='10', DewPointF='49', FeelsLikeC='25', FeelsLikeF='76', HeatIndexC='25', HeatIndexF='76', WindChillC='23', WindChillF='74', WindGustKmph='18', WindGustMiles='11', chanceoffog='0', chanceoffrost='0', chanceofhightemp='10', chanceofovercast='0', chanceofrain='0', chanceofremdry='84', chanceofsnow='0', chanceofsunshine='89', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='42', precipInches='0.0', precipMM='0.0', pressure='1022', pressureInches='30', tempC='23', tempF='74', time='1500', uvIndex='2', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='SW', winddirDegree='225', windspeedKmph='14', windspeedMiles='9'), HourlyForecast(DewPointC='13', DewPointF='55', FeelsLikeC='20', FeelsLikeF='68', HeatIndexC='20', HeatIndexF='68', WindChillC='20', WindChillF='68', WindGustKmph='29', WindGustMiles='18', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='92', chanceofsnow='0', chanceofsunshine='93', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='60', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='20', tempF='68', time='1800', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='S', winddirDegree='186', windspeedKmph='20', windspeedMiles='12'), HourlyForecast(DewPointC='11', DewPointF='51', FeelsLikeC='18', FeelsLikeF='64', HeatIndexC='18', HeatIndexF='64', WindChillC='18', WindChillF='64', WindGustKmph='19', WindGustMiles='12', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='94', chanceofsnow='0', chanceofsunshine='89', chanceofthunder='0', chanceofwindy='0', cloudcover='6', humidity='63', precipInches='0.0', precipMM='0.0', pressure='1025', pressureInches='30', tempC='18', tempF='64', time='2100', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='SE', winddirDegree='131', windspeedKmph='11', windspeedMiles='7')], maxtempC='24', maxtempF='75', mintempC='16', mintempF='60', sunHour='10.7', totalSnow_cm='0.0', uvIndex='1'), DailyForecast(astronomy=[Astronomy(moon_illumination='90', moon_phase='Waning Gibbous', moonrise='07:59 PM', moonset='10:13 AM', sunrise='06:59 AM', sunset='05:27 PM')], avgtempC='19', avgtempF='67', date='2025-05-16', hourly=[HourlyForecast(DewPointC='9', DewPointF='49', FeelsLikeC='17', FeelsLikeF='63', HeatIndexC='17', HeatIndexF='63', WindChillC='17', WindChillF='63', WindGustKmph='18', WindGustMiles='11', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='86', chanceofsnow='0', chanceofsunshine='91', chanceofthunder='0', chanceofwindy='0', cloudcover='9', humidity='59', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='17', tempF='63', time='0', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='SSE', winddirDegree='149', windspeedKmph='10', windspeedMiles='6'), HourlyForecast(DewPointC='8', DewPointF='47', FeelsLikeC='17', FeelsLikeF='62', HeatIndexC='17', HeatIndexF='62', WindChillC='17', WindChillF='62', WindGustKmph='15', WindGustMiles='9', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='94', chanceofsnow='0', chanceofsunshine='93', chanceofthunder='0', chanceofwindy='0', cloudcover='4', humidity='57', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='17', tempF='62', time='300', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='E', winddirDegree='79', windspeedKmph='8', windspeedMiles='5'), HourlyForecast(DewPointC='8', DewPointF='46', FeelsLikeC='16', FeelsLikeF='61', HeatIndexC='16', HeatIndexF='61', WindChillC='16', WindChillF='61', WindGustKmph='17', WindGustMiles='10', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='91', chanceofsnow='0', chanceofsunshine='86', chanceofthunder='0', chanceofwindy='0', cloudcover='2', humidity='58', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='16', tempF='61', time='600', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='75', windspeedKmph='9', windspeedMiles='6'), HourlyForecast(DewPointC='8', DewPointF='47', FeelsLikeC='18', FeelsLikeF='65', HeatIndexC='18', HeatIndexF='65', WindChillC='18', WindChillF='65', WindGustKmph='13', WindGustMiles='8', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='83', chanceofsnow='0', chanceofsunshine='88', chanceofthunder='0', chanceofwindy='0', cloudcover='2', humidity='51', precipInches='0.0', precipMM='0.0', pressure='1025', pressureInches='30', tempC='18', tempF='65', time='900', uvIndex='1', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='78', windspeedKmph='10', windspeedMiles='6'), HourlyForecast(DewPointC='8', DewPointF='46', FeelsLikeC='24', FeelsLikeF='76', HeatIndexC='24', HeatIndexF='76', WindChillC='24', WindChillF='74', WindGustKmph='4', WindGustMiles='3', chanceoffog='0', chanceoffrost='0', chanceofhightemp='10', chanceofovercast='0', chanceofrain='0', chanceofremdry='91', chanceofsnow='0', chanceofsunshine='94', chanceofthunder='0', chanceofwindy='0', cloudcover='3', humidity='36', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='24', tempF='74', time='1200', uvIndex='4', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='NE', winddirDegree='42', windspeedKmph='4', windspeedMiles='2'), HourlyForecast(DewPointC='8', DewPointF='47', FeelsLikeC='25', FeelsLikeF='76', HeatIndexC='25', HeatIndexF='76', WindChillC='24', WindChillF='75', WindGustKmph='12', WindGustMiles='8', chanceoffog='0', chanceoffrost='0', chanceofhightemp='10', chanceofovercast='0', chanceofrain='0', chanceofremdry='81', chanceofsnow='0', chanceofsunshine='93', chanceofthunder='0', chanceofwindy='0', cloudcover='5', humidity='38', precipInches='0.0', precipMM='0.0', pressure='1022', pressureInches='30', tempC='24', tempF='75', time='1500', uvIndex='2', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='SW', winddirDegree='215', windspeedKmph='9', windspeedMiles='6'), HourlyForecast(DewPointC='11', DewPointF='51', FeelsLikeC='21', FeelsLikeF='69', HeatIndexC='21', HeatIndexF='69', WindChillC='21', WindChillF='69', WindGustKmph='24', WindGustMiles='15', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='93', chanceofsnow='0', chanceofsunshine='89', chanceofthunder='0', chanceofwindy='0', cloudcover='11', humidity='52', precipInches='0.0', precipMM='0.0', pressure='1023', pressureInches='30', tempC='21', tempF='69', time='1800', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='S', winddirDegree='171', windspeedKmph='14', windspeedMiles='9'), HourlyForecast(DewPointC='8', DewPointF='46', FeelsLikeC='19', FeelsLikeF='66', HeatIndexC='19', HeatIndexF='66', WindChillC='19', WindChillF='66', WindGustKmph='21', WindGustMiles='13', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='86', chanceofsnow='0', chanceofsunshine='87', chanceofthunder='0', chanceofwindy='0', cloudcover='13', humidity='49', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='19', tempF='66', time='2100', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='SE', winddirDegree='125', windspeedKmph='12', windspeedMiles='7')], maxtempC='24', maxtempF='75', mintempC='16', mintempF='60', sunHour='10.7', totalSnow_cm='0.0', uvIndex='1'), DailyForecast(astronomy=[Astronomy(moon_illumination='83', moon_phase='Waning Gibbous', moonrise='08:59 PM', moonset='11:02 AM', sunrise='06:59 AM', sunset='05:27 PM')], avgtempC='20', avgtempF='68', date='2025-05-17', hourly=[HourlyForecast(DewPointC='7', DewPointF='44', FeelsLikeC='18', FeelsLikeF='65', HeatIndexC='18', HeatIndexF='65', WindChillC='18', WindChillF='65', WindGustKmph='25', WindGustMiles='16', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='84', chanceofsnow='0', chanceofsunshine='93', chanceofthunder='0', chanceofwindy='0', cloudcover='3', humidity='46', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='18', tempF='65', time='0', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='79', windspeedKmph='14', windspeedMiles='9'), HourlyForecast(DewPointC='7', DewPointF='44', FeelsLikeC='17', FeelsLikeF='63', HeatIndexC='17', HeatIndexF='63', WindChillC='17', WindChillF='63', WindGustKmph='33', WindGustMiles='20', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='94', chanceofsnow='0', chanceofsunshine='88', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='50', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='17', tempF='63', time='300', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='78', windspeedKmph='19', windspeedMiles='12'), HourlyForecast(DewPointC='7', DewPointF='44', FeelsLikeC='16', FeelsLikeF='61', HeatIndexC='16', HeatIndexF='61', WindChillC='16', WindChillF='61', WindGustKmph='29', WindGustMiles='18', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='84', chanceofsnow='0', chanceofsunshine='89', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='55', precipInches='0.0', precipMM='0.0', pressure='1025', pressureInches='30', tempC='16', tempF='61', time='600', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='69', windspeedKmph='17', windspeedMiles='10'), HourlyForecast(DewPointC='7', DewPointF='44', FeelsLikeC='19', FeelsLikeF='65', HeatIndexC='19', HeatIndexF='65', WindChillC='19', WindChillF='65', WindGustKmph='22', WindGustMiles='14', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='91', chanceofsnow='0', chanceofsunshine='91', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='47', precipInches='0.0', precipMM='0.0', pressure='1026', pressureInches='30', tempC='19', tempF='65', time='900', uvIndex='1', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='NE', winddirDegree='51', windspeedKmph='17', windspeedMiles='10'), HourlyForecast(DewPointC='7', DewPointF='45', FeelsLikeC='24', FeelsLikeF='76', HeatIndexC='24', HeatIndexF='76', WindChillC='24', WindChillF='75', WindGustKmph='14', WindGustMiles='9', chanceoffog='0', chanceoffrost='0', chanceofhightemp='10', chanceofovercast='0', chanceofrain='0', chanceofremdry='91', chanceofsnow='0', chanceofsunshine='93', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='35', precipInches='0.0', precipMM='0.0', pressure='1025', pressureInches='30', tempC='24', tempF='75', time='1200', uvIndex='4', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='NNE', winddirDegree='19', windspeedKmph='12', windspeedMiles='7'), HourlyForecast(DewPointC='7', DewPointF='45', FeelsLikeC='25', FeelsLikeF='76', HeatIndexC='25', HeatIndexF='76', WindChillC='24', WindChillF='76', WindGustKmph='7', WindGustMiles='4', chanceoffog='0', chanceoffrost='0', chanceofhightemp='15', chanceofovercast='0', chanceofrain='0', chanceofremdry='93', chanceofsnow='0', chanceofsunshine='89', chanceofthunder='0', chanceofwindy='0', cloudcover='6', humidity='34', precipInches='0.0', precipMM='0.0', pressure='1023', pressureInches='30', tempC='24', tempF='76', time='1500', uvIndex='2', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='WSW', winddirDegree='245', windspeedKmph='5', windspeedMiles='3'), HourlyForecast(DewPointC='9', DewPointF='49', FeelsLikeC='21', FeelsLikeF='70', HeatIndexC='24', HeatIndexF='76', WindChillC='21', WindChillF='70', WindGustKmph='16', WindGustMiles='10', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='86', chanceofsnow='0', chanceofsunshine='94', chanceofthunder='0', chanceofwindy='0', cloudcover='6', humidity='47', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='21', tempF='70', time='1800', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='S', winddirDegree='177', windspeedKmph='9', windspeedMiles='6'), HourlyForecast(DewPointC='5', DewPointF='41', FeelsLikeC='19', FeelsLikeF='66', HeatIndexC='19', HeatIndexF='66', WindChillC='19', WindChillF='66', WindGustKmph='19', WindGustMiles='12', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='80', chanceofsnow='0', chanceofsunshine='85', chanceofthunder='0', chanceofwindy='0', cloudcover='5', humidity='40', precipInches='0.0', precipMM='0.0', pressure='1025', pressureInches='30', tempC='19', tempF='66', time='2100', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ESE', winddirDegree='104', windspeedKmph='10', windspeedMiles='6')], maxtempC='25', maxtempF='76', mintempC='16', mintempF='60', sunHour='10.7', totalSnow_cm='0.0', uvIndex='1')] metadata=ResponseMetadata(is_real_data=True, is_cached=True, is_mock=False, status_code=None, error_type=None, error_message=None, url='http://wttr.in/Perth?format=j1', timestamp=1747310967.1646175)\n",
            "\n",
            "Text format for Perth:\n",
            "Weather report: Perth\n",
            "\n",
            "  \u001b[38;5;226m    \\   /    \u001b[0m Sunny\n",
            "  \u001b[38;5;226m     .-.     \u001b[0m \u001b[38;5;226m+73\u001b[0m(\u001b[38;5;220m77\u001b[0m) °F\u001b[0m     \n",
            "  \u001b[38;5;226m  ― (   ) ―  \u001b[0m \u001b[1m↑\u001b[0m \u001b[38;5;214m12\u001b[0m mph\u001b[0m       \n",
            "  \u001b[38;5;226m     `-’     \u001b[0m 6 mi\u001b[0m           \n",
            "  \u001b[38;5;226m    /   \\    \u001b[0m 0.0 in\u001b[0m         \n",
            "                                                       ┌─────────────┐                                                       \n",
            "┌──────────────────────────────┬───────────────────────┤  Thu 15 May ├───────────────────────┬──────────────────────────────┐\n",
            "│            Morning           │             Noon      └──────┬──────┘     Evening           │             Night            │\n",
            "├──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┤\n",
            "│ \u001b[38;5;226m    \\   /    \u001b[0m Sunny          │ \u001b[38;5;226m    \\   /    \u001b[0m Sunny          │ \u001b[38;5;226m    \\   /    \u001b[0m Clear          │ \u001b[38;5;226m    \\   /    \u001b[0m Clear          │\n",
            "│ \u001b[38;5;226m     .-.     \u001b[0m \u001b[38;5;154m64\u001b[0m °F\u001b[0m          │ \u001b[38;5;226m     .-.     \u001b[0m \u001b[38;5;226m+75\u001b[0m(\u001b[38;5;220m77\u001b[0m) °F\u001b[0m     │ \u001b[38;5;226m     .-.     \u001b[0m \u001b[38;5;190m68\u001b[0m °F\u001b[0m          │ \u001b[38;5;226m     .-.     \u001b[0m \u001b[38;5;154m64\u001b[0m °F\u001b[0m          │\n",
            "│ \u001b[38;5;226m  ― (   ) ―  \u001b[0m \u001b[1m↙\u001b[0m \u001b[38;5;190m6\u001b[0m-\u001b[38;5;226m8\u001b[0m mph\u001b[0m      │ \u001b[38;5;226m  ― (   ) ―  \u001b[0m \u001b[1m↓\u001b[0m \u001b[38;5;118m2\u001b[0m-\u001b[38;5;118m3\u001b[0m mph\u001b[0m      │ \u001b[38;5;226m  ― (   ) ―  \u001b[0m \u001b[1m↑\u001b[0m \u001b[38;5;214m12\u001b[0m-\u001b[38;5;202m18\u001b[0m mph\u001b[0m    │ \u001b[38;5;226m  ― (   ) ―  \u001b[0m \u001b[1m↖\u001b[0m \u001b[38;5;190m6\u001b[0m-\u001b[38;5;220m11\u001b[0m mph\u001b[0m     │\n",
            "│ \u001b[38;5;226m     `-’     \u001b[0m 6 mi\u001b[0m           │ \u001b[38;5;226m     `-’     \u001b[0m 6 mi\u001b[0m           │ \u001b[38;5;226m     `-’     \u001b[0m 6 mi\u001b[0m           │ \u001b[38;5;226m     `-’     \u001b[0m 6 mi\u001b[0m           │\n",
            "│ \u001b[38;5;226m    /   \\    \u001b[0m 0.0 in | 0%\u001b[0m    │ \u001b[38;5;226m    /   \\    \u001b[0m 0.0 in | 0%\u001b[0m    │ \u001b[38;5;226m    /   \\    \u001b[0m 0.0 in | 0%\u001b[0m    │ \u001b[38;5;226m    /   \\    \u001b[0m 0.0 in | 0%\u001b[0m    │\n",
            "└──────────────────────────────┴──────────────────────────────┴──────────────────────────────┴──────────────────────────────┘\n",
            "                                                       ┌─────────────┐                                                       \n",
            "┌──────────────────────────────┬───────────────────────┤  Fri 16 May ├───────────────────────┬──────────────────────────────┐\n",
            "│            Morning           │             Noon      └──────┬──────┘     Evening           │             Night            │\n",
            "├──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┤\n",
            "│ \u001b[38;5;226m    \\   /    \u001b[0m Sunny          │ \u001b[38;5;226m    \\   /    \u001b[0m Sunny          │ \u001b[38;5;226m    \\   /    \u001b[0m Clear          │ \u001b[38;5;226m    \\   /    \u001b[0m Clear          │\n",
            "│ \u001b[38;5;226m     .-.     \u001b[0m \u001b[38;5;154m64\u001b[0m °F\u001b[0m          │ \u001b[38;5;226m     .-.     \u001b[0m \u001b[38;5;226m75\u001b[0m °F\u001b[0m          │ \u001b[38;5;226m     .-.     \u001b[0m \u001b[38;5;190m69\u001b[0m °F\u001b[0m          │ \u001b[38;5;226m     .-.     \u001b[0m \u001b[38;5;190m66\u001b[0m °F\u001b[0m          │\n",
            "│ \u001b[38;5;226m  ― (   ) ―  \u001b[0m \u001b[1m↙\u001b[0m \u001b[38;5;190m6\u001b[0m-\u001b[38;5;226m8\u001b[0m mph\u001b[0m      │ \u001b[38;5;226m  ― (   ) ―  \u001b[0m \u001b[1m↙\u001b[0m \u001b[38;5;118m2\u001b[0m mph\u001b[0m        │ \u001b[38;5;226m  ― (   ) ―  \u001b[0m \u001b[1m↑\u001b[0m \u001b[38;5;226m8\u001b[0m-\u001b[38;5;208m14\u001b[0m mph\u001b[0m     │ \u001b[38;5;226m  ― (   ) ―  \u001b[0m \u001b[1m↖\u001b[0m \u001b[38;5;190m7\u001b[0m-\u001b[38;5;214m13\u001b[0m mph\u001b[0m     │\n",
            "│ \u001b[38;5;226m     `-’     \u001b[0m 6 mi\u001b[0m           │ \u001b[38;5;226m     `-’     \u001b[0m 6 mi\u001b[0m           │ \u001b[38;5;226m     `-’     \u001b[0m 6 mi\u001b[0m           │ \u001b[38;5;226m     `-’     \u001b[0m 6 mi\u001b[0m           │\n",
            "│ \u001b[38;5;226m    /   \\    \u001b[0m 0.0 in | 0%\u001b[0m    │ \u001b[38;5;226m    /   \\    \u001b[0m 0.0 in | 0%\u001b[0m    │ \u001b[38;5;226m    /   \\    \u001b[0m 0.0 in | 0%\u001b[0m    │ \u001b[38;5;226m    /   \\    \u001b[0m 0.0 in | 0%\u001b[0m    │\n",
            "└──────────────────────────────┴──────────────────────────────┴──────────────────────────────┴──────────────────────────────┘\n",
            "                                                       ┌─────────────┐                                                       \n",
            "┌──────────────────────────────┬───────────────────────┤  Sat 17 May ├───────────────────────┬──────────────────────────────┐\n",
            "│            Morning           │             Noon      └──────┬──────┘     Evening           │             Night            │\n",
            "├──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┤\n",
            "│ \u001b[38;5;226m    \\   /    \u001b[0m Sunny          │ \u001b[38;5;226m    \\   /    \u001b[0m Sunny          │ \u001b[38;5;226m    \\   /    \u001b[0m Clear          │ \u001b[38;5;226m    \\   /    \u001b[0m Clear          │\n",
            "│ \u001b[38;5;226m     .-.     \u001b[0m \u001b[38;5;190m66\u001b[0m °F\u001b[0m          │ \u001b[38;5;226m     .-.     \u001b[0m \u001b[38;5;226m75\u001b[0m °F\u001b[0m          │ \u001b[38;5;226m     .-.     \u001b[0m \u001b[38;5;190m69\u001b[0m °F\u001b[0m          │ \u001b[38;5;226m     .-.     \u001b[0m \u001b[38;5;190m66\u001b[0m °F\u001b[0m          │\n",
            "│ \u001b[38;5;226m  ― (   ) ―  \u001b[0m \u001b[1m↙\u001b[0m \u001b[38;5;220m10\u001b[0m-\u001b[38;5;214m13\u001b[0m mph\u001b[0m    │ \u001b[38;5;226m  ― (   ) ―  \u001b[0m \u001b[1m↓\u001b[0m \u001b[38;5;190m7\u001b[0m-\u001b[38;5;226m8\u001b[0m mph\u001b[0m      │ \u001b[38;5;226m  ― (   ) ―  \u001b[0m \u001b[1m↑\u001b[0m \u001b[38;5;154m5\u001b[0m-\u001b[38;5;220m9\u001b[0m mph\u001b[0m      │ \u001b[38;5;226m  ― (   ) ―  \u001b[0m \u001b[1m←\u001b[0m \u001b[38;5;190m6\u001b[0m-\u001b[38;5;220m11\u001b[0m mph\u001b[0m     │\n",
            "│ \u001b[38;5;226m     `-’     \u001b[0m 6 mi\u001b[0m           │ \u001b[38;5;226m     `-’     \u001b[0m 6 mi\u001b[0m           │ \u001b[38;5;226m     `-’     \u001b[0m 6 mi\u001b[0m           │ \u001b[38;5;226m     `-’     \u001b[0m 6 mi\u001b[0m           │\n",
            "│ \u001b[38;5;226m    /   \\    \u001b[0m 0.0 in | 0%\u001b[0m    │ \u001b[38;5;226m    /   \\    \u001b[0m 0.0 in | 0%\u001b[0m    │ \u001b[38;5;226m    /   \\    \u001b[0m 0.0 in | 0%\u001b[0m    │ \u001b[38;5;226m    /   \\    \u001b[0m 0.0 in | 0%\u001b[0m    │\n",
            "└──────────────────────────────┴──────────────────────────────┴──────────────────────────────┴──────────────────────────────┘\n",
            "Location: Perth, Western Australia, Australia [-31.952712,115.8604796]\n",
            "\n",
            "Follow \u001b[46m\u001b[30m@igor_chubin\u001b[0m for wttr.in updates\n",
            "\n",
            "\n",
            "Compact view (metric units) for Perth:\n",
            "current_condition=[CurrentCondition(FeelsLikeC='20', FeelsLikeF='68', cloudcover='0', humidity='60', localObsDateTime='2025-05-15 06:48 PM', observation_time='10:48 AM', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', temp_C='20', temp_F='68', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='S', winddirDegree='186', windspeedKmph='20', windspeedMiles='12')] nearest_area=[NearestArea(areaName=[AreaName(value='Maylands')], country=[Country(value='Australia')], latitude='-31.933', longitude='115.883', population='10447', region=[Region(value='Western Australia')], weatherUrl=[WeatherIconUrl(value='')])] request=[Request(query='Lat -31.95 and Lon 115.86', type='LatLon')] weather=[DailyForecast(astronomy=[Astronomy(moon_illumination='95', moon_phase='Waning Gibbous', moonrise='07:04 PM', moonset='09:19 AM', sunrise='06:58 AM', sunset='05:28 PM')], avgtempC='19', avgtempF='67', date='2025-05-15', hourly=[HourlyForecast(DewPointC='6', DewPointF='43', FeelsLikeC='18', FeelsLikeF='65', HeatIndexC='18', HeatIndexF='65', WindChillC='18', WindChillF='65', WindGustKmph='32', WindGustMiles='20', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='81', chanceofsnow='0', chanceofsunshine='93', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='45', precipInches='0.0', precipMM='0.0', pressure='1026', pressureInches='30', tempC='18', tempF='65', time='0', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='E', winddirDegree='87', windspeedKmph='19', windspeedMiles='12'), HourlyForecast(DewPointC='6', DewPointF='44', FeelsLikeC='17', FeelsLikeF='63', HeatIndexC='17', HeatIndexF='63', WindChillC='17', WindChillF='63', WindGustKmph='29', WindGustMiles='18', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='89', chanceofsnow='0', chanceofsunshine='87', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='49', precipInches='0.0', precipMM='0.0', pressure='1026', pressureInches='30', tempC='17', tempF='63', time='300', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='72', windspeedKmph='17', windspeedMiles='11'), HourlyForecast(DewPointC='8', DewPointF='46', FeelsLikeC='16', FeelsLikeF='61', HeatIndexC='16', HeatIndexF='61', WindChillC='16', WindChillF='61', WindGustKmph='22', WindGustMiles='14', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='93', chanceofsnow='0', chanceofsunshine='87', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='59', precipInches='0.0', precipMM='0.0', pressure='1025', pressureInches='30', tempC='16', tempF='61', time='600', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='67', windspeedKmph='13', windspeedMiles='8'), HourlyForecast(DewPointC='10', DewPointF='49', FeelsLikeC='18', FeelsLikeF='65', HeatIndexC='18', HeatIndexF='65', WindChillC='18', WindChillF='65', WindGustKmph='14', WindGustMiles='9', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='86', chanceofsnow='0', chanceofsunshine='86', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='57', precipInches='0.0', precipMM='0.0', pressure='1026', pressureInches='30', tempC='18', tempF='65', time='900', uvIndex='1', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='58', windspeedKmph='11', windspeedMiles='7'), HourlyForecast(DewPointC='9', DewPointF='48', FeelsLikeC='25', FeelsLikeF='76', HeatIndexC='25', HeatIndexF='76', WindChillC='24', WindChillF='75', WindGustKmph='5', WindGustMiles='3', chanceoffog='0', chanceoffrost='0', chanceofhightemp='10', chanceofovercast='0', chanceofrain='0', chanceofremdry='83', chanceofsnow='0', chanceofsunshine='90', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='39', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='24', tempF='75', time='1200', uvIndex='4', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='N', winddirDegree='358', windspeedKmph='4', windspeedMiles='2'), HourlyForecast(DewPointC='10', DewPointF='49', FeelsLikeC='25', FeelsLikeF='76', HeatIndexC='25', HeatIndexF='76', WindChillC='23', WindChillF='74', WindGustKmph='18', WindGustMiles='11', chanceoffog='0', chanceoffrost='0', chanceofhightemp='10', chanceofovercast='0', chanceofrain='0', chanceofremdry='84', chanceofsnow='0', chanceofsunshine='89', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='42', precipInches='0.0', precipMM='0.0', pressure='1022', pressureInches='30', tempC='23', tempF='74', time='1500', uvIndex='2', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='SW', winddirDegree='225', windspeedKmph='14', windspeedMiles='9'), HourlyForecast(DewPointC='13', DewPointF='55', FeelsLikeC='20', FeelsLikeF='68', HeatIndexC='20', HeatIndexF='68', WindChillC='20', WindChillF='68', WindGustKmph='29', WindGustMiles='18', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='92', chanceofsnow='0', chanceofsunshine='93', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='60', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='20', tempF='68', time='1800', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='S', winddirDegree='186', windspeedKmph='20', windspeedMiles='12'), HourlyForecast(DewPointC='11', DewPointF='51', FeelsLikeC='18', FeelsLikeF='64', HeatIndexC='18', HeatIndexF='64', WindChillC='18', WindChillF='64', WindGustKmph='19', WindGustMiles='12', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='94', chanceofsnow='0', chanceofsunshine='89', chanceofthunder='0', chanceofwindy='0', cloudcover='6', humidity='63', precipInches='0.0', precipMM='0.0', pressure='1025', pressureInches='30', tempC='18', tempF='64', time='2100', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='SE', winddirDegree='131', windspeedKmph='11', windspeedMiles='7')], maxtempC='24', maxtempF='75', mintempC='16', mintempF='60', sunHour='10.7', totalSnow_cm='0.0', uvIndex='1'), DailyForecast(astronomy=[Astronomy(moon_illumination='90', moon_phase='Waning Gibbous', moonrise='07:59 PM', moonset='10:13 AM', sunrise='06:59 AM', sunset='05:27 PM')], avgtempC='19', avgtempF='67', date='2025-05-16', hourly=[HourlyForecast(DewPointC='9', DewPointF='49', FeelsLikeC='17', FeelsLikeF='63', HeatIndexC='17', HeatIndexF='63', WindChillC='17', WindChillF='63', WindGustKmph='18', WindGustMiles='11', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='86', chanceofsnow='0', chanceofsunshine='91', chanceofthunder='0', chanceofwindy='0', cloudcover='9', humidity='59', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='17', tempF='63', time='0', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='SSE', winddirDegree='149', windspeedKmph='10', windspeedMiles='6'), HourlyForecast(DewPointC='8', DewPointF='47', FeelsLikeC='17', FeelsLikeF='62', HeatIndexC='17', HeatIndexF='62', WindChillC='17', WindChillF='62', WindGustKmph='15', WindGustMiles='9', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='94', chanceofsnow='0', chanceofsunshine='93', chanceofthunder='0', chanceofwindy='0', cloudcover='4', humidity='57', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='17', tempF='62', time='300', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='E', winddirDegree='79', windspeedKmph='8', windspeedMiles='5'), HourlyForecast(DewPointC='8', DewPointF='46', FeelsLikeC='16', FeelsLikeF='61', HeatIndexC='16', HeatIndexF='61', WindChillC='16', WindChillF='61', WindGustKmph='17', WindGustMiles='10', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='91', chanceofsnow='0', chanceofsunshine='86', chanceofthunder='0', chanceofwindy='0', cloudcover='2', humidity='58', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='16', tempF='61', time='600', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='75', windspeedKmph='9', windspeedMiles='6'), HourlyForecast(DewPointC='8', DewPointF='47', FeelsLikeC='18', FeelsLikeF='65', HeatIndexC='18', HeatIndexF='65', WindChillC='18', WindChillF='65', WindGustKmph='13', WindGustMiles='8', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='83', chanceofsnow='0', chanceofsunshine='88', chanceofthunder='0', chanceofwindy='0', cloudcover='2', humidity='51', precipInches='0.0', precipMM='0.0', pressure='1025', pressureInches='30', tempC='18', tempF='65', time='900', uvIndex='1', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='78', windspeedKmph='10', windspeedMiles='6'), HourlyForecast(DewPointC='8', DewPointF='46', FeelsLikeC='24', FeelsLikeF='76', HeatIndexC='24', HeatIndexF='76', WindChillC='24', WindChillF='74', WindGustKmph='4', WindGustMiles='3', chanceoffog='0', chanceoffrost='0', chanceofhightemp='10', chanceofovercast='0', chanceofrain='0', chanceofremdry='91', chanceofsnow='0', chanceofsunshine='94', chanceofthunder='0', chanceofwindy='0', cloudcover='3', humidity='36', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='24', tempF='74', time='1200', uvIndex='4', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='NE', winddirDegree='42', windspeedKmph='4', windspeedMiles='2'), HourlyForecast(DewPointC='8', DewPointF='47', FeelsLikeC='25', FeelsLikeF='76', HeatIndexC='25', HeatIndexF='76', WindChillC='24', WindChillF='75', WindGustKmph='12', WindGustMiles='8', chanceoffog='0', chanceoffrost='0', chanceofhightemp='10', chanceofovercast='0', chanceofrain='0', chanceofremdry='81', chanceofsnow='0', chanceofsunshine='93', chanceofthunder='0', chanceofwindy='0', cloudcover='5', humidity='38', precipInches='0.0', precipMM='0.0', pressure='1022', pressureInches='30', tempC='24', tempF='75', time='1500', uvIndex='2', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='SW', winddirDegree='215', windspeedKmph='9', windspeedMiles='6'), HourlyForecast(DewPointC='11', DewPointF='51', FeelsLikeC='21', FeelsLikeF='69', HeatIndexC='21', HeatIndexF='69', WindChillC='21', WindChillF='69', WindGustKmph='24', WindGustMiles='15', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='93', chanceofsnow='0', chanceofsunshine='89', chanceofthunder='0', chanceofwindy='0', cloudcover='11', humidity='52', precipInches='0.0', precipMM='0.0', pressure='1023', pressureInches='30', tempC='21', tempF='69', time='1800', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='S', winddirDegree='171', windspeedKmph='14', windspeedMiles='9'), HourlyForecast(DewPointC='8', DewPointF='46', FeelsLikeC='19', FeelsLikeF='66', HeatIndexC='19', HeatIndexF='66', WindChillC='19', WindChillF='66', WindGustKmph='21', WindGustMiles='13', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='86', chanceofsnow='0', chanceofsunshine='87', chanceofthunder='0', chanceofwindy='0', cloudcover='13', humidity='49', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='19', tempF='66', time='2100', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='SE', winddirDegree='125', windspeedKmph='12', windspeedMiles='7')], maxtempC='24', maxtempF='75', mintempC='16', mintempF='60', sunHour='10.7', totalSnow_cm='0.0', uvIndex='1'), DailyForecast(astronomy=[Astronomy(moon_illumination='83', moon_phase='Waning Gibbous', moonrise='08:59 PM', moonset='11:02 AM', sunrise='06:59 AM', sunset='05:27 PM')], avgtempC='20', avgtempF='68', date='2025-05-17', hourly=[HourlyForecast(DewPointC='7', DewPointF='44', FeelsLikeC='18', FeelsLikeF='65', HeatIndexC='18', HeatIndexF='65', WindChillC='18', WindChillF='65', WindGustKmph='25', WindGustMiles='16', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='84', chanceofsnow='0', chanceofsunshine='93', chanceofthunder='0', chanceofwindy='0', cloudcover='3', humidity='46', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='18', tempF='65', time='0', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='79', windspeedKmph='14', windspeedMiles='9'), HourlyForecast(DewPointC='7', DewPointF='44', FeelsLikeC='17', FeelsLikeF='63', HeatIndexC='17', HeatIndexF='63', WindChillC='17', WindChillF='63', WindGustKmph='33', WindGustMiles='20', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='94', chanceofsnow='0', chanceofsunshine='88', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='50', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='17', tempF='63', time='300', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='78', windspeedKmph='19', windspeedMiles='12'), HourlyForecast(DewPointC='7', DewPointF='44', FeelsLikeC='16', FeelsLikeF='61', HeatIndexC='16', HeatIndexF='61', WindChillC='16', WindChillF='61', WindGustKmph='29', WindGustMiles='18', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='84', chanceofsnow='0', chanceofsunshine='89', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='55', precipInches='0.0', precipMM='0.0', pressure='1025', pressureInches='30', tempC='16', tempF='61', time='600', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ENE', winddirDegree='69', windspeedKmph='17', windspeedMiles='10'), HourlyForecast(DewPointC='7', DewPointF='44', FeelsLikeC='19', FeelsLikeF='65', HeatIndexC='19', HeatIndexF='65', WindChillC='19', WindChillF='65', WindGustKmph='22', WindGustMiles='14', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='91', chanceofsnow='0', chanceofsunshine='91', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='47', precipInches='0.0', precipMM='0.0', pressure='1026', pressureInches='30', tempC='19', tempF='65', time='900', uvIndex='1', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='NE', winddirDegree='51', windspeedKmph='17', windspeedMiles='10'), HourlyForecast(DewPointC='7', DewPointF='45', FeelsLikeC='24', FeelsLikeF='76', HeatIndexC='24', HeatIndexF='76', WindChillC='24', WindChillF='75', WindGustKmph='14', WindGustMiles='9', chanceoffog='0', chanceoffrost='0', chanceofhightemp='10', chanceofovercast='0', chanceofrain='0', chanceofremdry='91', chanceofsnow='0', chanceofsunshine='93', chanceofthunder='0', chanceofwindy='0', cloudcover='0', humidity='35', precipInches='0.0', precipMM='0.0', pressure='1025', pressureInches='30', tempC='24', tempF='75', time='1200', uvIndex='4', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='NNE', winddirDegree='19', windspeedKmph='12', windspeedMiles='7'), HourlyForecast(DewPointC='7', DewPointF='45', FeelsLikeC='25', FeelsLikeF='76', HeatIndexC='25', HeatIndexF='76', WindChillC='24', WindChillF='76', WindGustKmph='7', WindGustMiles='4', chanceoffog='0', chanceoffrost='0', chanceofhightemp='15', chanceofovercast='0', chanceofrain='0', chanceofremdry='93', chanceofsnow='0', chanceofsunshine='89', chanceofthunder='0', chanceofwindy='0', cloudcover='6', humidity='34', precipInches='0.0', precipMM='0.0', pressure='1023', pressureInches='30', tempC='24', tempF='76', time='1500', uvIndex='2', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Sunny')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='WSW', winddirDegree='245', windspeedKmph='5', windspeedMiles='3'), HourlyForecast(DewPointC='9', DewPointF='49', FeelsLikeC='21', FeelsLikeF='70', HeatIndexC='24', HeatIndexF='76', WindChillC='21', WindChillF='70', WindGustKmph='16', WindGustMiles='10', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='86', chanceofsnow='0', chanceofsunshine='94', chanceofthunder='0', chanceofwindy='0', cloudcover='6', humidity='47', precipInches='0.0', precipMM='0.0', pressure='1024', pressureInches='30', tempC='21', tempF='70', time='1800', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='S', winddirDegree='177', windspeedKmph='9', windspeedMiles='6'), HourlyForecast(DewPointC='5', DewPointF='41', FeelsLikeC='19', FeelsLikeF='66', HeatIndexC='19', HeatIndexF='66', WindChillC='19', WindChillF='66', WindGustKmph='19', WindGustMiles='12', chanceoffog='0', chanceoffrost='0', chanceofhightemp='0', chanceofovercast='0', chanceofrain='0', chanceofremdry='80', chanceofsnow='0', chanceofsunshine='85', chanceofthunder='0', chanceofwindy='0', cloudcover='5', humidity='40', precipInches='0.0', precipMM='0.0', pressure='1025', pressureInches='30', tempC='19', tempF='66', time='2100', uvIndex='0', visibility='10', visibilityMiles='6', weatherCode='113', weatherDesc=[WeatherDesc(value='Clear ')], weatherIconUrl=[WeatherIconUrl(value='')], winddir16Point='ESE', winddirDegree='104', windspeedKmph='10', windspeedMiles='6')], maxtempC='25', maxtempF='76', mintempC='16', mintempF='60', sunHour='10.7', totalSnow_cm='0.0', uvIndex='1')] metadata=ResponseMetadata(is_real_data=True, is_cached=True, is_mock=False, status_code=None, error_type=None, error_message=None, url='http://wttr.in/Perth?m0&format=j1', timestamp=1747310967.1666577)\n",
            "\n",
            "PNG weather for Perth saved as 'perth_weather.png'.\n"
          ]
        }
      ],
      "source": [
        "import fetch_my_weather\n",
        "\n",
        "# Get weather for Perth in default JSON format\n",
        "perth_weather = fetch_my_weather.get_weather(location=\"Perth\")\n",
        "print(\"Default JSON format for Perth:\")\n",
        "print(perth_weather)\n",
        "\n",
        "# Get weather for Perth as plain text\n",
        "perth_weather_text = fetch_my_weather.get_weather(location=\"Perth\", format=\"text\")\n",
        "print(\"\\nText format for Perth:\")\n",
        "print(perth_weather_text)\n",
        "\n",
        "# Get compact weather view for Perth in metric units\n",
        "perth_weather_compact = fetch_my_weather.get_weather(\n",
        "    location=\"Perth\", view_options=\"0\", units=\"m\"\n",
        ")\n",
        "print(\"\\nCompact view (metric units) for Perth:\")\n",
        "print(perth_weather_compact)\n",
        "\n",
        "# Get weather for Perth in PNG format\n",
        "perth_weather_png = fetch_my_weather.get_weather(location=\"Perth\", format=\"png\", is_png=True)\n",
        "with open(\"perth_weather.png\", \"wb\") as file:\n",
        "    file.write(perth_weather_png)\n",
        "print(\"\\nPNG weather for Perth saved as 'perth_weather.png'.\")\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "8a744fdc",
      "metadata": {
        "id": "8a744fdc"
      },
      "source": [
        "## 📊 Visualisation Functions"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 57,
      "id": "9dc3bf85",
      "metadata": {
        "id": "9dc3bf85"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "from typing import Dict, Any\n",
        "\n",
        "def plot_temperature(weather_data: Dict[str, Any], title=\"Temperature Over Time\"):\n",
        "    \"\"\"\n",
        "    Plot temperature over time using weather JSON data.\n",
        "    Assumes weather_data has a 'forecasts' list with timestamps and temperature info.\n",
        "    \"\"\"\n",
        "    times = []\n",
        "    temps = []\n",
        "\n",
        "    # Example data extraction — adjust keys based on your JSON structure\n",
        "    for forecast in weather_data.get(\"forecasts\", []):\n",
        "        times.append(forecast.get(\"timestamp\", \"\"))\n",
        "        temps.append(forecast.get(\"temperature\", None))\n",
        "\n",
        "    if not times or not temps:\n",
        "        print(\"No temperature data available to plot.\")\n",
        "        return\n",
        "\n",
        "    plt.figure(figsize=(10, 5))\n",
        "    plt.plot(times, temps, marker='o', linestyle='-', color='tab:red')\n",
        "    plt.title(title)\n",
        "    plt.xlabel(\"Time\")\n",
        "    plt.ylabel(\"Temperature (°C)\")\n",
        "    plt.xticks(rotation=45)\n",
        "    plt.grid(True)\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "def plot_humidity(weather_data: Dict[str, Any], title=\"Humidity Over Time\"):\n",
        "    \"\"\"\n",
        "    Plot humidity over time from weather JSON data.\n",
        "    \"\"\"\n",
        "    times = []\n",
        "    humidity = []\n",
        "\n",
        "    for forecast in weather_data.get(\"forecasts\", []):\n",
        "        times.append(forecast.get(\"timestamp\", \"\"))\n",
        "        humidity.append(forecast.get(\"humidity\", None))\n",
        "\n",
        "    if not times or not humidity:\n",
        "        print(\"No humidity data available to plot.\")\n",
        "        return\n",
        "\n",
        "    plt.figure(figsize=(10, 5))\n",
        "    plt.plot(times, humidity, marker='o', linestyle='-', color='tab:blue')\n",
        "    plt.title(title)\n",
        "    plt.xlabel(\"Time\")\n",
        "    plt.ylabel(\"Humidity (%)\")\n",
        "    plt.xticks(rotation=45)\n",
        "    plt.grid(True)\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "def show_weather_png(png_data: bytes, filename=\"weather.png\"):\n",
        "    \"\"\"\n",
        "    Save PNG weather data to a file and display it inline using matplotlib.\n",
        "    \"\"\"\n",
        "    with open(filename, \"wb\") as f:\n",
        "        f.write(png_data)\n",
        "\n",
        "    img = plt.imread(filename)\n",
        "    plt.figure(figsize=(8, 6))\n",
        "    plt.imshow(img)\n",
        "    plt.axis('off')\n",
        "    plt.title(\"Weather PNG Visualization\")\n",
        "    plt.show()\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def plot_temperature(weather_data):\n",
        "    # Convert object to dict if possible\n",
        "    if hasattr(weather_data, \"dict\"):\n",
        "        data = weather_data.dict()\n",
        "    else:\n",
        "        data = weather_data\n",
        "\n",
        "    times = []\n",
        "    temps = []\n",
        "\n",
        "    for forecast in data.get(\"forecasts\", []):\n",
        "        times.append(forecast.get(\"timestamp\", \"\"))\n",
        "        temps.append(forecast.get(\"temperature\", None))\n",
        "\n",
        "    if not times or not temps:\n",
        "        print(\"No temperature data available to plot.\")\n",
        "        return\n",
        "\n",
        "    import matplotlib.pyplot as plt\n",
        "    plt.figure(figsize=(10, 5))\n",
        "    plt.plot(times, temps, marker='o', linestyle='-', color='tab:red')\n",
        "    plt.title(\"Temperature Over Time\")\n",
        "    plt.xlabel(\"Time\")\n",
        "    plt.ylabel(\"Temperature (°C)\")\n",
        "    plt.xticks(rotation=45)\n",
        "    plt.grid(True)\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n"
      ],
      "metadata": {
        "id": "HpOlQylYG5Ho"
      },
      "id": "HpOlQylYG5Ho",
      "execution_count": 59,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "id": "9f95d160",
      "metadata": {
        "id": "9f95d160"
      },
      "source": [
        "## 🤖 Natural Language Processing"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 60,
      "id": "bcc5833e",
      "metadata": {
        "id": "bcc5833e"
      },
      "outputs": [],
      "source": [
        "# Define parse_weather_question() and generate_weather_response() here\n",
        "def parse_weather_question(question):\n",
        "    \"\"\"\n",
        "    Parse a natural language weather question.\n",
        "\n",
        "    Args:\n",
        "        question (str): User's weather-related question\n",
        "\n",
        "    Returns:\n",
        "        dict: Extracted information including location, time period, and weather attribute\n",
        "    \"\"\"\n",
        "    pass"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "0d85225e",
      "metadata": {
        "id": "0d85225e"
      },
      "source": [
        "## 🧭 User Interface"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "id": "fa6cb0f6",
      "metadata": {
        "id": "fa6cb0f6"
      },
      "outputs": [],
      "source": [
        "# Define menu functions using pyinputplus or ipywidgets here"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "d643a53c",
      "metadata": {
        "id": "d643a53c"
      },
      "source": [
        "## 🧩 Main Application Logic"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 30,
      "id": "a9e2e805",
      "metadata": {
        "id": "a9e2e805"
      },
      "outputs": [],
      "source": [
        "# Tie everything together here\n",
        "def generate_weather_response(parsed_question, weather_data):\n",
        "    \"\"\"\n",
        "    Generate a natural language response to a weather question.\n",
        "\n",
        "    Args:\n",
        "        parsed_question (dict): Parsed question data\n",
        "        weather_data (dict): Weather data\n",
        "\n",
        "    Returns:\n",
        "        str: Natural language response\n",
        "    \"\"\"\n",
        "    pass"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "fde44479",
      "metadata": {
        "id": "fde44479"
      },
      "source": [
        "## 🧪 Testing and Examples"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 31,
      "id": "4e573901",
      "metadata": {
        "id": "4e573901"
      },
      "outputs": [],
      "source": [
        "# Include sample input/output for each function"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "d2885880",
      "metadata": {
        "id": "d2885880"
      },
      "source": [
        "## 🗂️ AI Prompting Log (Optional)\n",
        "Add markdown cells here summarising prompts used or link to AI conversations in the `ai-conversations/` folder."
      ]
    }
  ],
  "metadata": {
    "language_info": {
      "name": "python"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}